***************
*** 143,162 ****
      globalcontext << Core::Constants::C_GLOBAL_ID;
  
      Core::ActionManager *am = Core::ICore::instance()->actionManager();
-     Core::ActionContainer *mfind = am->actionContainer(Constants::M_FIND);
      Core::Command *cmd;
  
-     m_findInDocumentAction = new QAction(tr("Current Document"), this);
      cmd = am->registerAction(m_findInDocumentAction, Constants::FIND_IN_DOCUMENT, globalcontext);
      cmd->setDefaultKeySequence(QKeySequence::Find);
-     mfind->addAction(cmd, Constants::G_FIND_FILTERS);
      connect(m_findInDocumentAction, SIGNAL(triggered()), this, SLOT(openFind()));
  
      if (QApplication::clipboard()->supportsFindBuffer()) {
          m_enterFindStringAction = new QAction(tr("Enter Find String"), this);
          cmd = am->registerAction(m_enterFindStringAction, tr("Find.EnterFindString"), globalcontext);
          cmd->setDefaultKeySequence(QKeySequence(tr("Ctrl+E")));
-         mfind->addAction(cmd, Constants::G_FIND_ACTIONS);
          connect(m_enterFindStringAction, SIGNAL(triggered()), this, SLOT(putSelectionToFindClipboard()));
          connect(QApplication::clipboard(), SIGNAL(findBufferChanged()), this, SLOT(updateFromFindClipboard()));
      }
--- 144,163 ----
      globalcontext << Core::Constants::C_GLOBAL_ID;
  
      Core::ActionManager *am = Core::ICore::instance()->actionManager();
+     Core::ActionContainer *medit = am->actionContainer(Core::Constants::M_EDIT);
      Core::Command *cmd;
  
+     m_findInDocumentAction = new QAction(tr("Find..."), this);
      cmd = am->registerAction(m_findInDocumentAction, Constants::FIND_IN_DOCUMENT, globalcontext);
      cmd->setDefaultKeySequence(QKeySequence::Find);
+     medit->addAction(cmd, Constants::G_FIND_FILTERS);
      connect(m_findInDocumentAction, SIGNAL(triggered()), this, SLOT(openFind()));
  
      if (QApplication::clipboard()->supportsFindBuffer()) {
          m_enterFindStringAction = new QAction(tr("Enter Find String"), this);
          cmd = am->registerAction(m_enterFindStringAction, tr("Find.EnterFindString"), globalcontext);
          cmd->setDefaultKeySequence(QKeySequence(tr("Ctrl+E")));
+         medit->addAction(cmd, Constants::G_FIND_ACTIONS);
          connect(m_enterFindStringAction, SIGNAL(triggered()), this, SLOT(putSelectionToFindClipboard()));
          connect(QApplication::clipboard(), SIGNAL(findBufferChanged()), this, SLOT(updateFromFindClipboard()));
      }
***************
*** 176,197 ****
      cmd = am->registerAction(m_replacePreviousAction, Constants::REPLACE_PREVIOUS, globalcontext);
      // shortcut removed, clashes with Ctrl++ on many keyboard layouts
      //cmd->setDefaultKeySequence(QKeySequence(tr("Ctrl+Shift+=")));
-     mfind->addAction(cmd, Constants::G_FIND_ACTIONS);
      connect(m_replacePreviousAction, SIGNAL(triggered()), this, SLOT(invokeReplacePrevious()));
      m_ui.replacePreviousButton->setDefaultAction(cmd->action());
  
      m_replaceAllAction = new QAction(tr("Replace All"), this);
      cmd = am->registerAction(m_replaceAllAction, Constants::REPLACE_ALL, globalcontext);
-     mfind->addAction(cmd, Constants::G_FIND_ACTIONS);
      connect(m_replaceAllAction, SIGNAL(triggered()), this, SLOT(invokeReplaceAll()));
      m_ui.replaceAllButton->setDefaultAction(cmd->action());
- 
      m_caseSensitiveAction = new QAction(tr("Case Sensitive"), this);
      m_caseSensitiveAction->setIcon(QIcon(":/find/images/casesensitively.png"));
      m_caseSensitiveAction->setCheckable(true);
      m_caseSensitiveAction->setChecked(false);
      cmd = am->registerAction(m_caseSensitiveAction, Constants::CASE_SENSITIVE, globalcontext);
-     mfind->addAction(cmd, Constants::G_FIND_FLAGS);
      connect(m_caseSensitiveAction, SIGNAL(triggered(bool)), m_plugin, SLOT(setCaseSensitive(bool)));
      lineEditMenu->addAction(m_caseSensitiveAction);
  
--- 177,198 ----
      cmd = am->registerAction(m_replacePreviousAction, Constants::REPLACE_PREVIOUS, globalcontext);
      // shortcut removed, clashes with Ctrl++ on many keyboard layouts
      //cmd->setDefaultKeySequence(QKeySequence(tr("Ctrl+Shift+=")));
+     medit->addAction(cmd, Constants::G_FIND_ACTIONS);
      connect(m_replacePreviousAction, SIGNAL(triggered()), this, SLOT(invokeReplacePrevious()));
      m_ui.replacePreviousButton->setDefaultAction(cmd->action());
  
      m_replaceAllAction = new QAction(tr("Replace All"), this);
      cmd = am->registerAction(m_replaceAllAction, Constants::REPLACE_ALL, globalcontext);
+     medit->addAction(cmd, Constants::G_FIND_ACTIONS);
      connect(m_replaceAllAction, SIGNAL(triggered()), this, SLOT(invokeReplaceAll()));
      m_ui.replaceAllButton->setDefaultAction(cmd->action());
+ #endif
      m_caseSensitiveAction = new QAction(tr("Case Sensitive"), this);
      m_caseSensitiveAction->setIcon(QIcon(":/find/images/casesensitively.png"));
      m_caseSensitiveAction->setCheckable(true);
      m_caseSensitiveAction->setChecked(false);
      cmd = am->registerAction(m_caseSensitiveAction, Constants::CASE_SENSITIVE, globalcontext);
+     medit->addAction(cmd, Constants::G_FIND_FLAGS);
      connect(m_caseSensitiveAction, SIGNAL(triggered(bool)), m_plugin, SLOT(setCaseSensitive(bool)));
      lineEditMenu->addAction(m_caseSensitiveAction);
  
***************
*** 200,206 ****
      m_wholeWordAction->setCheckable(true);
      m_wholeWordAction->setChecked(false);
      cmd = am->registerAction(m_wholeWordAction, Constants::WHOLE_WORDS, globalcontext);
-     mfind->addAction(cmd, Constants::G_FIND_FLAGS);
      connect(m_wholeWordAction, SIGNAL(triggered(bool)), m_plugin, SLOT(setWholeWord(bool)));
      lineEditMenu->addAction(m_wholeWordAction);
  
--- 201,207 ----
      m_wholeWordAction->setCheckable(true);
      m_wholeWordAction->setChecked(false);
      cmd = am->registerAction(m_wholeWordAction, Constants::WHOLE_WORDS, globalcontext);
+     medit->addAction(cmd, Constants::G_FIND_FLAGS);
      connect(m_wholeWordAction, SIGNAL(triggered(bool)), m_plugin, SLOT(setWholeWord(bool)));
      lineEditMenu->addAction(m_wholeWordAction);
  
***************
*** 264,272 ****
      m_findInDocumentAction->setEnabled(enabled);
      m_findNextAction->setEnabled(enabled);
      m_findPreviousAction->setEnabled(enabled);
      m_replaceNextAction->setEnabled(replaceEnabled);
      m_replacePreviousAction->setEnabled(replaceEnabled);
      m_replaceAllAction->setEnabled(replaceEnabled);
      m_caseSensitiveAction->setEnabled(enabled);
      m_wholeWordAction->setEnabled(enabled);
      if (QApplication::clipboard()->supportsFindBuffer())
--- 265,275 ----
      m_findInDocumentAction->setEnabled(enabled);
      m_findNextAction->setEnabled(enabled);
      m_findPreviousAction->setEnabled(enabled);
+ #if 0
      m_replaceNextAction->setEnabled(replaceEnabled);
      m_replacePreviousAction->setEnabled(replaceEnabled);
      m_replaceAllAction->setEnabled(replaceEnabled);
+ #endif
      m_caseSensitiveAction->setEnabled(enabled);
      m_wholeWordAction->setEnabled(enabled);
      if (QApplication::clipboard()->supportsFindBuffer())
